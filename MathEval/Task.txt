------------------------------
已完成
------------------------------
重构 Parser
    /重构以支持扩展方法
        /在Parser类中增加 RegistFunctions() 方法。
        /尝试用缓存 Functions 类，而不是临时创建，可以考虑用Lazy方式创建。
        /尝试增加扩展处理Functions类。实现IFunction即可。
    /支持 !=

重构 Expression
    /ExecuteCallFunc 修改传递参数，改为 List<object>，没必要用字典。就是注意下标都要减一。
    /Expression.Gc() -> Clear();

重构 Function
    考虑尝试去除一堆的Consts变量，即 FunctionDef.Name
    /增加内置时间方法（用一个类处理即可 DateFunctions）
        /增加 Now\Year\Month\Day\Minitue\Weekday
        /增加 AddYears\AddMonths\AddDays\AddHours\AddMinutes\AddSeconds\AddDate(raw, year, month, day, hour, minute, second);
    /IFunction
        object Execute(Dictionary<string, object> args, ExpressionContext dc);
        改为
        object Execute(List<object> args, ExpressionContext dc, string funcName = "");
    /重构 Function，支持一个类处理多个函数，有效减少类的数目
    /整理所有Functions，去除无用的注释代码
    /修改命名方式为首字母大写
    /分目录存放
/重构 FunctionDef 类
    /Args -> ArgTypes
    /ParamCount -> ArgCount

/重构 IFunction
    /GetInfo() -> GetDefs();
/重构 Operators
    /Org.MathEval.Node -> Org.MathEval.Nodes
    /Org.MathEval.Implements.Node -> Org.MathEval.Nodes.Node
    /整理所有Operators代码，去除注释的无效代码
    /重构IOperator
    /argsMap 改为 int -> object，简化一堆的Const.Key123456
    /WorkingCulture -> Culture
/从 Common 类中拆出 Consts类，并简化命名
/更改命名空间 org.matheval -> Org.MathEval
/项目更名为 MathExpressionEval
/去除众多的输出，保留主要的版本就行了。net4.5, netstarndard2

